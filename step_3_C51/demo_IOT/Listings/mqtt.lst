C51 COMPILER V9.54   MQTT                                                                  06/22/2022 18:22:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MQTT
OBJECT MODULE PLACED IN .\Objects\mqtt.obj
COMPILER INVOKED BY: C:\Keil_v5_51\C51\BIN\C51.EXE mqtt\mqtt.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\uart;.\esp8266;.\
                    -DELAY;.\LCD;.\mqtt;.\timer0;.\OneWire;.\DS18B20) DEBUG OBJECTEXTEND PRINT(.\Listings\mqtt.lst) TABS(3) OBJECT(.\Objects\
                    -mqtt.obj)

line level    source

   1          #include <string.h>
   2          #include  "mqtt.h"
   3          #include  "uart.h"
   4          
   5          
   6          // 登录
   7          void MQTT_Login(char *client_id, char *username, char *password){
   8   1         int i;
   9   1         //char po[] = {0x10,0x20,0x00,0x06,0x4D,0x51,0x49,0x73,0x64,0x70,0x03,0xC2,0x00,0x3C,0x00,0x04,0x74,0x65,
             -0x73,0x74,0x00,0x05,0x77,0x6F,0x67,0x75,0x61,0x00,0x05,0x77,0x6F,0x67,0x75,0x61};
  10   1         int index = 16;
  11   1         char fixed_header = 0x10; // 固定头
  12   1         char data_len = 0x12 + strlen(client_id) + strlen(username) + strlen(password);// 协议长度
  13   1         char protocol[] = {0x00,0x06,0x4D,0x51,0x49,0x73,0x64,0x70}; // 协议版本长度 两字节 + 协议名称 6字节
  14   1         char version = 0x03; // 版本号
  15   1         char connect_tag = 0xC2; // 连接标志
  16   1         char active_time[] = {0x00,0x3C}; // 活动时长 60s
  17   1         
  18   1         int len = strlen(client_id);
  19   1         char Data[50] = "";
  20   1         Data[0] = fixed_header;
  21   1         Data[1] = data_len;
  22   1         Data[2] = protocol[0];
  23   1         Data[3] = protocol[1];
  24   1         Data[4] = protocol[2];
  25   1         Data[5] = protocol[3];
  26   1         Data[6] = protocol[4];
  27   1         Data[7] = protocol[5];
  28   1         Data[8] = protocol[6];
  29   1         Data[9] = protocol[7];
  30   1         Data[10] = version;
  31   1         Data[11] = connect_tag;
  32   1         Data[12] = active_time[0];
  33   1         Data[13] = active_time[1];
  34   1         Data[14] = 0x00;
  35   1         Data[15] = (0x00 + strlen(client_id));
  36   1         while(*client_id != '\0')
  37   1         {
  38   2            Data[index] = *client_id;
  39   2            index ++;
  40   2            client_id ++;
  41   2         }
  42   1         
  43   1         Data[index++] = 0x00;
  44   1         Data[index++] = (0x00 + strlen(username));
  45   1         while(*username != '\0')
  46   1         {
  47   2            Data[index] = *username;
  48   2            index ++;
  49   2            username ++;
  50   2         }
  51   1         
  52   1         Data[index++] = 0x00;
C51 COMPILER V9.54   MQTT                                                                  06/22/2022 18:22:41 PAGE 2   

  53   1         Data[index++] = (0x00 + strlen(password));
  54   1         while(*password != '\0')
  55   1         {
  56   2            Data[index] = *password;
  57   2            index ++;
  58   2            password ++;
  59   2         }
  60   1         
  61   1         for(i = 0 ; i < index ; i ++){
  62   2         USART_SendByte(Data[i]);
  63   2         }
  64   1         
  65   1      }
  66          
  67          // 心跳包
  68          void MQTT_Heart(){
  69   1         
  70   1         char heart_package = {0xC0, 0x00};
  71   1      
  72   1      }
  73          
  74          /*
  75          82 // 固定头
  76          09 // 数据长度不包含自己
  77          00 01 //消息识别
  78          00 04 //主题长度
  79          74 65 73 74 //主题名
  80          00 //Qos
  81          */
  82          // 订阅主题
  83          void MQTT_Sub(char *topic){
  84   1         int i = 0;
  85   1         int index = 6;
  86   1         char package[50] = "\0";
  87   1         char fixed_header = 0x82; // 固定头
  88   1         char data_len = 0x05 + strlen(topic);
  89   1         
  90   1         
  91   1         package[0] = fixed_header;
  92   1         package[1] = data_len;
  93   1         package[2] = 0x00;
  94   1         package[3] = 0x01;
  95   1         package[4] = 0x00;
  96   1         package[5] = (0x00 + strlen(topic));
  97   1         
  98   1         while(*topic != '\0')
  99   1         {
 100   2            package[index++] = *topic;
 101   2            topic ++;
 102   2         }
 103   1         
 104   1         package[index++] = 0x00;
 105   1      
 106   1         for(i = 0 ; i < index ; i ++){
 107   2            USART_SendByte(package[i]);
 108   2         }
 109   1      
 110   1      }
 111          
 112          // 发布
 113          void MQTT_Pub(char *topic, char *msg) {
 114   1         int i = 0;
C51 COMPILER V9.54   MQTT                                                                  06/22/2022 18:22:41 PAGE 3   

 115   1         int index = 4;
 116   1         char package[100] = "\0";
 117   1         char fixed_header = 0x30; // 固定头
 118   1         char data_len = 0x02 + strlen(topic) + strlen(msg);
 119   1         
 120   1         package[0] = fixed_header;
 121   1         package[1] = data_len;
 122   1         package[2] = 0x00;
 123   1         package[3] = (0x00 + strlen(topic));
 124   1         
 125   1         while(*topic != '\0')
 126   1         {
 127   2            package[index++] = *topic;
 128   2            topic ++;
 129   2         }
 130   1         
 131   1         while(*msg != '\0')
 132   1         {
 133   2            package[index++] = *msg;
 134   2            msg ++;
 135   2         }
 136   1         
 137   1         package[index] = '\0';
 138   1         
 139   1         for(i = 0 ; i < index ; i ++){
 140   2            USART_SendByte(package[i]);
 141   2         }
 142   1      }
 143             
 144          
 145          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1227    ----
   CONSTANT SIZE    =    210    ----
   XDATA SIZE       =   ----     248
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
